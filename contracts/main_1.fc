
#pragma version >=0.4.0;
#include "imports/stdlib.fc";

int load_data() inline {
    slice ds = get_data().begin_parse();
    return ds~load_uint(64);
}

() save_data(int res) impure {
    set_data(
        begin_cell()
            .store_uint(res, 64)
        .end_cell()
        );
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure { 
    
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);

    if (flags & 1) {
        return ();
    }

    slice sender_address = cs~load_msg_address();
    
    if (in_msg_body.slice_empty?()) {
        return ();
    }

    int op = in_msg_body~load_uint(32);
    int query_id = in_msg_body~load_uint(64);

    if(op == "deposit"c){
        return();
    }

    if(op == "tranfer_msg_to_owner"c){
        ifnot(equal_slices(sender_address,owner_address)){
            
        }
    }

    ;;int res = load_data();
    ;;int num = in_msg_body~load_uint(32);
    ;;res += num;
    ;;save_data(res);
}

int get_res() method_id {
    return load_data();
}